cmake_minimum_required(VERSION 2.4)

PROJECT (uwrapc)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

ADD_DEFINITIONS(-D H5_USE_16_API)

IF(WIN32)
	ADD_DEFINITIONS(-D_HDF5USEDLL_)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ELSE(WIN32)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall  -W  -std=c99")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
ENDIF(WIN32)

find_package(TIFF REQUIRED)
find_package(HDF5 REQUIRED)
find_package(FFTW3 REQUIRED)
find_package(SpImage REQUIRED)
find_package(PNG REQUIRED)
find_package(ZLIB REQUIRED)
find_package(JPEG REQUIRED)
find_package(SZIP REQUIRED)
find_package(MATH REQUIRED)
find_package(GSL)
find_package(MATHEVAL)
find_package(QWT)


SET(DMALLOC_USE OFF CACHE BOOL "If ON link to dmalloc library if possible.")
SET(DOUBLE_PRECISION OFF CACHE BOOL "If ON use double precision. Otherwise use single precision")
SET(DEBUG_MEM OFF CACHE BOOL "If ON use memory debugging code.")

SET(USE_QT4 OFF CACHE BOOL "If ON use Qt4.")
SET(USE_MPI OFF CACHE BOOL "If ON use MPI for parallelization.")


IF(DMALLOC_USE)
		    FIND_LIBRARY (DMALLOC_LIBRARY dmalloc /usr/lib /sw/lib)
		    FIND_PATH (DMALLOC_INCLUDE_DIR dmalloc.h PATHS /usr/include /sw/include)	
		    IF(DMALLOC_LIBRARY)
			ADD_DEFINITIONS(-D_USE_DMALLOC)
			SET(LINK_TO_DMALLOC 1)
		    ENDIF(DMALLOC_LIBRARY)
ENDIF(DMALLOC_USE)


IF(DOUBLE_PRECISION)
	ADD_DEFINITIONS(-D_SP_DOUBLE_PRECISION)
ELSE(DOUBLE_PRECISION)	
	ADD_DEFINITIONS(-D_SP_SINGLE_PRECISION)
ENDIF(DOUBLE_PRECISION)

IF(DEBUG_MEM)
	ADD_DEFINITIONS(-D_SP_DEBUG_MEM)
ENDIF(DEBUG_MEM)



SET(QT_USE_QTOPENGL 1)
SET(QT_USE_QTNETWORK 1)
IF(USE_QT4)
  INCLUDE(FindQt4)
ENDIF(USE_QT4)

IF(QT_QTCORE_FOUND AND QT_QTNETWORK_FOUND)
	ADD_DEFINITIONS(-DNETWORK_SUPPORT)
ENDIF(QT_QTCORE_FOUND AND QT_QTNETWORK_FOUND)



IF(WIN32)
SET (GETOPT utils/getopt.c)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ELSE(WIN32)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall -std=c99")
ENDIF(WIN32)

SET(LOCAL_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/include/)

LIST(APPEND INCLUDE_LIST ${SPIMAGE_INCLUDE_DIR} ${TIFF_INCLUDE_DIR} ${HDF5_INCLUDE_DIR} ${FFTW3_INCLUDE_DIR} ${PNG_INCLUDE_DIR})

LIST(APPEND LIBRARY_LIST ${SPIMAGE_LIBRARIES}  ${HDF5_LIBRARIES} ${SZIP_LIBRARIES} ${TIFF_LIBRARIES} ${FFTW_LIBRARIES} ${JPEG_LIBRARIES} ${Z_LIBRARIES} ${MATH_LIBRARIES})
IF(QT4_FOUND AND QT_USE_FRAMEWORKS)
ELSE(QT4_FOUND AND QT_USE_FRAMEWORKS)
  LIST(APPEND LIBRARY_LIST ${PNG_LIBRARY})
ENDIF(QT4_FOUND AND QT_USE_FRAMEWORKS)

IF(QT4_FOUND)
  INCLUDE(${QT_USE_FILE})
  LIST(APPEND LIBRARY_LIST ${QT_LIBRARIES})
ENDIF(QT4_FOUND)


IF(USE_MPI)
  FIND_PACKAGE(MPI)
  IF(MPI_FOUND)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MPI_COMPILE_FLAGS}")
    LIST(APPEND INCLUDE_LIST ${MPI_INCLUDE_PATH})
    LIST(APPEND LIBRARY_LIST ${MPI_LIBRARIES})
    ADD_DEFINITIONS(-DMPI)
  ENDIF(MPI_FOUND)
ENDIF(USE_MPI)


IF(LINK_TO_DMALLOC)
LIST(APPEND LIBRARY_LIST ${DMALLOC_LIBRARY})
ENDIF(LINK_TO_DMALLOC)

ADD_SUBDIRECTORY(src)


