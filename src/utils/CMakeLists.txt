
PROJECT (uwrapc)

SET(CMAKE_VERBOSE_MAKEFILE ON)


IF(WIN32 AND NOT MINGW)
	SET (PORTS ${PORTS} getopt.c)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
ENDIF(WIN32 AND NOT MINGW)


LIST(APPEND INCLUDE_LIST ${LOCAL_INCLUDE}/utils)
INCLUDE_DIRECTORIES(${INCLUDE_LIST})

ADD_EXECUTABLE(tiff2h5 tiff2h5.c ${PORTS})
ADD_EXECUTABLE(tiff2png tiff2png.c ${PORTS})
#ADD_EXECUTABLE(analyze_img analyze_img.c ${PORTS})
ADD_EXECUTABLE(image_to_vtk image_to_vtk.c ${PORTS})
ADD_EXECUTABLE(image_fft image_fft.c ${PORTS})

IF(WIN32)
  ADD_DEFINITIONS(-D_HDF5USEDLL_)
ENDIF(WIN32)
ADD_EXECUTABLE(gif2h5image gif2h5image.c ${PORTS})
ADD_EXECUTABLE(denoise denoise.c)
ADD_EXECUTABLE(background_subtract background_subtract.c)
#ADD_EXECUTABLE(h5tospeden h5tospeden.c ${PORTS})
ADD_EXECUTABLE(separate_channel separate_channel.c ${PORTS})
ADD_EXECUTABLE(matrix2image matrix2image.c ${PORTS})
ADD_EXECUTABLE(fft_bench fft_bench.c)
#ADD_EXECUTABLE(combine_images combine_images.c)
ADD_EXECUTABLE(manual_merge manual_merge.c)
#ADD_EXECUTABLE(analyse_image analyse_image.c)
ADD_EXECUTABLE(prtf prtf.c)
ADD_EXECUTABLE(average_h5 average_h5.c)
#ADD_EXECUTABLE(deautocorrelate deautocorrelate.c)
ADD_EXECUTABLE(autocorrelate autocorrelate.c)
#ADD_EXECUTABLE(stretch stretch.c)
ADD_EXECUTABLE(image_to_png image_to_png.c)
ADD_EXECUTABLE(png_to_image png_to_image.c)
ADD_EXECUTABLE(propagate propagate.c)
ADD_EXECUTABLE(rs_r_factor rs_r_factor.c)
ADD_EXECUTABLE(r_factor r_factor.c)
ADD_EXECUTABLE(shell_plot shell_plot.c)
ADD_EXECUTABLE(spot_integrate spot_integrate.c)
ADD_EXECUTABLE(image_to_reflections image_to_reflections.c)
ADD_EXECUTABLE(multi_shot_exposure multi_shot_exposure.c)
ADD_EXECUTABLE(scale_to_photons_per_pixel scale_to_photons_per_pixel.c)
ADD_EXECUTABLE(VMIraw2tiff VMIraw2tiff.c)
#ADD_EXECUTABLE(recover_shanon recover_shanon.c)
#ADD_EXECUTABLE(recover_shanon2 recover_shanon2.c)
#ADD_EXECUTABLE(recover_shanon3 recover_shanon3.c)
#ADD_EXECUTABLE(recover_shanon_mpi recover_shanon_mpi.c)
ADD_EXECUTABLE(analyse_mask analyse_mask.c ${PORTS})
ADD_EXECUTABLE(combine_phases_and_amplitudes combine_phases_and_amplitudes.c)
ADD_EXECUTABLE(fft_image fft_image.c)
if(GSL_FOUND)
  ADD_EXECUTABLE(circular_averaging circular_averaging.c)
  ADD_EXECUTABLE(recover_shanon_mpi2 recover_shanon_mpi2.c)
endif(GSL_FOUND)

IF(MATHEVAL_FOUND)
  ADD_EXECUTABLE(image_math image_math.c)
  TARGET_LINK_LIBRARIES(image_math ${LIBRARY_LIST} ${MATHEVAL_LIBRARIES})
  INCLUDE_DIRECTORIES(${MATHEVAL_INCLUDE_DIR})
  LIST(APPEND BINS image_math)
ENDIF(MATHEVAL_FOUND)
ADD_EXECUTABLE(localized_blur localized_blur.c)

#I'm gonna reduce the number of programs actually used

TARGET_LINK_LIBRARIES(tiff2h5 ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(tiff2png ${LIBRARY_LIST})
#TARGET_LINK_LIBRARIES(analyze_img ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(image_to_vtk ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(gif2h5image ${LIBRARY_LIST} )
TARGET_LINK_LIBRARIES(autocorrelate ${LIBRARY_LIST} )
#TARGET_LINK_LIBRARIES(h5tospeden ${LIBRARY_LIST} )
TARGET_LINK_LIBRARIES(separate_channel ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(matrix2image ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(fft_bench ${LIBRARY_LIST})
#TARGET_LINK_LIBRARIES(combine_images ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(manual_merge ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(prtf ${LIBRARY_LIST})
#TARGET_LINK_LIBRARIES(analyse_image ${LIBRARY_LIST})
#TARGET_LINK_LIBRARIES(deautocorrelate ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(average_h5 ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(image_to_png ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(png_to_image ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(denoise ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(background_subtract ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(propagate ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(rs_r_factor ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(r_factor ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(shell_plot ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(image_fft ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(spot_integrate ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(image_to_reflections ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(multi_shot_exposure ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(scale_to_photons_per_pixel ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(VMIraw2tiff ${LIBRARY_LIST})
#TARGET_LINK_LIBRARIES(recover_shanon ${LIBRARY_LIST} gsl gslcblas)
#TARGET_LINK_LIBRARIES(recover_shanon2 ${LIBRARY_LIST} gsl gslcblas)
#TARGET_LINK_LIBRARIES(recover_shanon3 ${LIBRARY_LIST} gsl gslcblas)
#TARGET_LINK_LIBRARIES(recover_shanon_mpi ${LIBRARY_LIST} gsl gslcblas)
#TARGET_LINK_LIBRARIES(stretch ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(analyse_mask ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(combine_phases_and_amplitudes ${LIBRARY_LIST})
TARGET_LINK_LIBRARIES(fft_image ${LIBRARY_LIST})
if(GSL_FOUND)
  TARGET_LINK_LIBRARIES(circular_averaging ${LIBRARY_LIST} ${GSL_LIBRARIES})
  TARGET_LINK_LIBRARIES(recover_shanon_mpi2 ${LIBRARY_LIST} ${GSL_LIBRARIES})
endif(GSL_FOUND)
TARGET_LINK_LIBRARIES(localized_blur ${LIBRARY_LIST})

SET_TARGET_PROPERTIES(analyse_mask PROPERTIES
  INSTALL_NAME_DIR "@loader_path/../lib"
  )

LIST(APPEND BINS tiff2h5 image_to_vtk gif2h5image image_to_png png_to_image tiff2png autocorrelate prtf denoise background_subtract propagate matrix2image rs_r_factor average_h5 r_factor shell_plot separate_channel fft_bench manual_merge image_fft spot_integrate image_to_reflections multi_shot_exposure localized_blur analyse_mask combine_phases_and_amplitudes)

INSTALL(TARGETS ${BINS}
            RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
            LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
            ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

INSTALL(PROGRAMS EOS300D_CRW2H5.pl DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
