PROJECT (uwrapc)

IF(QT4_FOUND)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
SET(QXT_HEADER_FILES qxtboundfunction.h qxtrpcservice.h qxtrpcservice_p.h qxtabstractconnectionmanager.h qxtrpcpeer.h qxttcpconnectionmanager.h qxttcpconnectionmanager_p.h)
QT_WRAP_CPP(rpctestserver rpctestserver_moc_files  rpctestserver.h ${QXT_HEADER_FILES})
SET(QXT_OBJS ${CMAKE_CURRENT_SOURCE_DIR}/qxtrpcservice.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtabstractconnectionmanager.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtmetaobject.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtdatastreamsignalserializer.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtrpcpeer.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxttcpconnectionmanager.cpp)
ADD_EXECUTABLE(rpctestserver rpctestserver.cpp ${QXT_OBJS} ${rpctestserver_moc_files})
TARGET_LINK_LIBRARIES(rpctestserver ${QT_LIBRARIES})
QT_WRAP_CPP(rpctestclient rpctestclient_moc_files  rpctestclient.h ${QXT_HEADER_FILES})
ADD_EXECUTABLE(rpctestclient rpctestclient.cpp ${QXT_OBJS} ${rpctestclient_moc_files})
TARGET_LINK_LIBRARIES(rpctestclient ${QT_LIBRARIES})

QT_WRAP_CPP(rpctestsignalserver rpctestsignalserver_moc_files  rpctestsignalserver.h ${QXT_HEADER_FILES})
SET(QXT_OBJS ${CMAKE_CURRENT_SOURCE_DIR}/qxtrpcservice.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtabstractconnectionmanager.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtmetaobject.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtdatastreamsignalserializer.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxtrpcpeer.cpp ${CMAKE_CURRENT_SOURCE_DIR}/qxttcpconnectionmanager.cpp ${qxt_other_moc_files})
ADD_EXECUTABLE(rpctestsignalserver rpctestsignalserver.cpp ${QXT_OBJS} ${rpctestsignalserver_moc_files})
TARGET_LINK_LIBRARIES(rpctestsignalserver ${QT_LIBRARIES})
QT_WRAP_CPP(rpctestsignalclient rpctestsignalclient_moc_files  rpctestsignalclient.h ${QXT_HEADER_FILES})
ADD_EXECUTABLE(rpctestsignalclient rpctestsignalclient.cpp ${QXT_OBJS} ${rpctestsignalclient_moc_files})
TARGET_LINK_LIBRARIES(rpctestsignalclient ${QT_LIBRARIES})
ENDIF(QT4_FOUND)